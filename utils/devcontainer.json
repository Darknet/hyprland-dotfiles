{
  "name": "Project Templates Development",
  "build": {
    "dockerfile": "Dockerfile"
  },
  "features": {
    "ghcr.io/devcontainers/features/common-utils:2": {
      "installZsh": true,
      "configureZshAsDefaultShell": true,
      "installOhMyZsh": true
    },
    "ghcr.io/devcontainers/features/git:1": {
      "ppa": true,
      "version": "latest"
    }
  },
  "customizations": {
    "vscode": {
      "extensions": [
        "ms-python.python",
        "ms-python.black-formatter",
        "ms-python.flake8",
        "bradlc.vscode-tailwindcss",
        "esbenp.prettier-vscode",
        "ms-vscode.vscode-json",
        "redhat.vscode-yaml",
        "ms-kubernetes-tools.vscode-kubernetes-tools",
        "ms-azuretools.vscode-docker",
        "timonwong.shellcheck",
        "foxundermoon.shell-format",
        "ms-vscode.makefile-tools",
        "github.copilot",
        "github.copilot-chat",
        "ms-vscode.remote-containers"
      ],
      "settings": {
        "terminal.integrated.defaultProfile.linux": "zsh",
        "python.defaultInterpreterPath": "/usr/bin/python3",
        "python.formatting.provider": "black",
        "python.linting.enabled": true,
        "python.linting.flake8Enabled": true,
        "editor.formatOnSave": true,
        "editor.codeActionsOnSave": {
          "source.fixAll": true
        },
        "files.associations": {
          "*.yml": "yaml",
          "*.yaml": "yaml",
          "Dockerfile*": "dockerfile",
          "*.sh": "shellscript"
        },
        "yaml.schemas": {
          "https://json.schemastore.org/github-workflow.json": ".github/workflows/*.yml",
          "https://json.schemastore.org/github-action.json": ".github/actions/*/action.yml",
          "https://raw.githubusercontent.com/compose-spec/compose-spec/master/schema/compose-spec.json": "docker-compose*.yml"
        }
      }
    }
  },
  "forwardPorts": [3000, 5000, 8000, 8080],
  "postCreateCommand": "chmod +x scripts/*.sh && npm install",
  "remoteUser": "vscode",
  "mounts": [
    "source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind"
  ],
  "runArgs": ["--init"],
  "shutdownAction": "stopContainer"
}
