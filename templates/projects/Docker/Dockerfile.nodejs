# Multi-stage build para Node.js
FROM node:18-alpine AS builder

WORKDIR /app

# Copiar archivos de dependencias
COPY package*.json ./

# Instalar dependencias
RUN npm ci --only=production && npm cache clean --force

# Copiar c칩digo fuente
COPY . .

# Build de la aplicaci칩n (si es necesario)
RUN npm run build 2>/dev/null || echo "No build script found"

# Etapa de producci칩n
FROM node:18-alpine AS production

# Crear usuario no-root
RUN addgroup -g 1001 -S nodejs && \
    adduser -S nextjs -u 1001

WORKDIR /app

# Copiar dependencias desde builder
COPY --from=builder --chown=nextjs:nodejs /app/node_modules ./node_modules
COPY --from=builder --chown=nextjs:nodejs /app/package*.json ./
COPY --from=builder --chown=nextjs:nodejs /app/src ./src

# Instalar dumb-init para manejo de se침ales
RUN apk add --no-cache dumb-init

# Cambiar a usuario no-root
USER nextjs

# Exponer puerto
EXPOSE 3000

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD node healthcheck.js

# Comando de inicio
ENTRYPOINT ["dumb-init", "--"]
CMD ["node", "src/index.js"]
